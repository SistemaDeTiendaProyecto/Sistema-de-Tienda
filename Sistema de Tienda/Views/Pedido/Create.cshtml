@model Sistema_de_Tienda.Models.Pedido




<h1 class="text-center mb-4">Crear Pedido</h1>
<div class="card shadow-lg p-4">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        
        <div class="row">
            <div class="col-md-6 mb-3">

                <div class="form-group">
                    <label asp-for="IdCliente" class="control-label">Cliente</label>
                    <select asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente"></select>
                </div>


                <div class="form-group">
                    <label asp-for="Total" class="control-label">Total</label>
                    <input asp-for="Total" class="form-control" />
                    <span asp-validation-for="Total" class="text-danger"></span>
                </div>
            </div>
        </div>

        
                 <div class="row" id="divDetallesVenta">
                    <partial name="_Detalles_pedido" model="Model.DetallesPedidos" />
                </div>

        <div class="row mt-3">
            <div class="col-12 text-center">
                <input type="submit" value="Crear" class="btn btn-primary mr-2" />
                <a class="btn btn-danger" asp-action="Index">Cancelar</a>
            </div>
        </div>
    </form>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    $(document).ready(function() {
    // Función para inicializar los detalles de venta desde localStorage
    function inicializarDetallesVenta() {
        // Obtener el carrito del localStorage
        var carritoJSON = localStorage.getItem('carrito');
        
        if (!carritoJSON) {
            console.log("No hay productos en el carrito");
            return;
        }
        
        try {
            // Convertir la cadena JSON a un objeto JavaScript
            var carrito = JSON.parse(carritoJSON);
            
            // Obtener el contenedor donde se agregarán los campos ocultos
            var $divDetallesVenta = $("#divDetallesVenta");
            
            // Limpiar cualquier contenido anterior
            $divDetallesVenta.empty();
            
            // Variable para el total del pedido
            var totalPedido = 0;
            
            // Función para generar el nombre del campo según el formato mostrado
            function getName(index, prop) {
                return 'DetallesPedido[' + index + '].' + prop;
            }
            
            // Iterar sobre cada producto en el carrito y crear campos ocultos
            $.each(carrito, function(index, item) {
                // Calcular el subtotal
                var subtotal = item.cantidad * item.precio;
                totalPedido += subtotal;
                
                // Crear campos ocultos para cada propiedad del modelo DetallesPedido
                var $hiddenFields = $(
                    '<input type="hidden" name="' + getName(index, 'IdProducto') + '" value="' + item.idProducto + '" />' +
                    '<input type="hidden" name="' + getName(index, 'Nombre') + '" value="' + item.nombre + '" />' +
                    '<input type="hidden" name="' + getName(index, 'Cantidad') + '" value="' + item.cantidad + '" />' +
                    '<input type="hidden" name="' + getName(index, 'PrecioUnitario') + '" value="' + item.precio.toFixed(2) + '" />' +
                    '<input type="hidden" name="' + getName(index, 'Subtotal') + '" value="' + subtotal.toFixed(2) + '" />'
                );
                
                // Añadir al div de detalles
                $divDetallesVenta.append($hiddenFields);
            });
            
            // Actualizar el campo de total en el formulario principal
            $('input[asp-for="Total"]').val(totalPedido.toFixed(2));
            
            // También crear una tabla visible para mostrar los productos
            crearTablaProductos(carrito);
            
        } catch (error) {
            console.error("Error al procesar el carrito desde localStorage:", error);
        }
    }

    // Función para crear una tabla visible que muestre los productos
    function crearTablaProductos(carrito) {
        // Si ya existe la tabla, eliminarla
        $("#tablaProductosContainer").remove();
        
        // Crear contenedor para la tabla
        var $tablaContainer = $('<div id="tablaProductosContainer" class="mt-4"></div>');
        
        // Crear la estructura HTML para la tabla
        var $tabla = $(
            '<div class="container mt-4">' +
                '<h2>Lista de Productos</h2>' +
                '<table class="table table-bordered">' +
                    '<thead>' +
                        '<tr>' +
                            '<th>ID Producto</th>' +
                            '<th>Nombre</th>' +
                            '<th>Cantidad</th>' +
                            '<th>Precio</th>' +
                            '<th>Subtotal</th>' +
                        '</tr>' +
                    '</thead>' +
                    '<tbody></tbody>' +
                '</table>' +
            '</div>'
        );
        
        // Calcular total
        var total = 0;
        
        // Agregar filas para cada producto
        $.each(carrito, function(index, item) {
            var subtotal = item.cantidad * item.precio;
            total += subtotal;
            
            var $fila = $(
                '<tr>' +
                    '<td>' + item.idProducto + '</td>' +
                    '<td>' + item.nombre + '</td>' +
                    '<td>' + item.cantidad + '</td>' +
                    '<td>$' + item.precio.toFixed(2) + '</td>' +
                    '<td>$' + subtotal.toFixed(2) + '</td>' +
                '</tr>'
            );
            
            $tabla.find('tbody').append($fila);
        });
        
        // Agregar fila de total
        var $filaTotalFooter = $(
            '<tfoot>' +
                '<tr>' +
                    '<td colspan="4" class="text-right"><strong>Total:</strong></td>' +
                    '<td>$' + total.toFixed(2) + '</td>' +
                '</tr>' +
            '</tfoot>'
        );
        
        $tabla.find('table').append($filaTotalFooter);
        
        // Añadir la tabla al contenedor
        $tablaContainer.append($tabla);
        
        // Insertar después del div de detalles
        $("#divDetallesVenta").after($tablaContainer);
    }

    // Inicializar al cargar la página
    inicializarDetallesVenta();
});

</script>

}
